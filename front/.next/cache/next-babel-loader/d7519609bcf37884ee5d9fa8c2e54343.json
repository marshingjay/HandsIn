{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst toggleLoggedIn = (state, newState, forceUpdate) => {\n  state.isLoggedIn = newState;\n\n  if (newState) {\n    state.page = state.type;\n  }\n\n  if (!newState) {\n    state.page = \"\\login\";\n  }\n\n  forceUpdate();\n};\n\nconst toggleType = (state, newState, forceUpdate) => {\n  state.type = newState;\n  forceUpdate();\n};\n\nconst Login = () => {\n  const state = useContext(GlobalContext); // const {info, setInfo} = useContext(GlobalContext);\n\n  const forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: e => toggleLoggedIn(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Here\", state.isLoggedIn, \" \", state.page), __jsx(\"select\", {\n    onChange: e => toggleType(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"/orgDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: \"/userDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Volunteer\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","Header","GlobalContext","toggleLoggedIn","state","newState","forceUpdate","isLoggedIn","page","type","toggleType","Login","bind","e","target","value"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,KAAkC;AACrDF,EAAAA,KAAK,CAACG,UAAN,GAAmBF,QAAnB;;AAEA,MAAGA,QAAH,EAAY;AACRD,IAAAA,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACK,IAAnB;AACH;;AAED,MAAG,CAACJ,QAAJ,EAAc;AACVD,IAAAA,KAAK,CAACI,IAAN,GAAa,QAAb;AACH;;AACDF,EAAAA,WAAW;AACd,CAXD;;AAaA,MAAMI,UAAU,GAAG,CAACN,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,KAAkC;AACjDF,EAAAA,KAAK,CAACK,IAAN,GAAaJ,QAAb;AACAC,EAAAA,WAAW;AACd,CAHD;;AAMA,MAAMK,KAAK,GAAG,MAAM;AAChB,QAAMP,KAAK,GAAGN,UAAU,CAACI,aAAD,CAAxB,CADgB,CAEhB;;AAEA,QAAMI,WAAW,GAAGT,KAAK,CAACE,QAAN,GAAiB,CAAjB,EAAoBa,IAApB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGI;AAAQ,IAAA,QAAQ,EAAGC,CAAD,IAAOV,cAAc,CAACC,KAAD,EAAQS,CAAC,CAACC,MAAF,CAASC,KAAjB,EAAwBT,WAAxB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,EAGI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,CAHJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQF,KAAK,CAACG,UAAd,OAA2BH,KAAK,CAACI,IAAjC,CATJ,EAWI;AAAQ,IAAA,QAAQ,EAAGK,CAAD,IAAOH,UAAU,CAACN,KAAD,EAAQS,CAAC,CAACC,MAAF,CAASC,KAAjB,EAAwBT,WAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAXJ,CADJ;AAkBH,CAxBD;;AA0BA,eAAeK,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState, forceUpdate) => {\n    state.isLoggedIn = newState;\n    \n    if(newState){\n        state.page = state.type;\n    } \n    \n    if(!newState) {\n        state.page = \"\\login\";\n    }\n    forceUpdate();\n}\n\nconst toggleType = (state, newState, forceUpdate) => {\n    state.type = newState;\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(state, e.target.value, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn} {state.page}</p>\n            \n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value=\"/orgDash\" >Organization</option>\n                <option value=\"/userDash\">Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}