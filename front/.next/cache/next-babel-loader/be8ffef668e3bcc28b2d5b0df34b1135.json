{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useReducer, createContext } from 'react';\nconst GlobalContext = createContext();\nconst defaultState = {\n  isLoggedIn: false,\n  isVolunteer: false\n};\n\nconst GlobalReducer = (state, action) => {\n  switch (action.type) {\n    case SET_STATES:\n      return _objectSpread({}, state, {\n        isLoggedIn: _objectSpread({}, action.AisLoggedIn),\n        isVolunteer: _objectSpread({}, action.AisVolunteer)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const GlobalProvider = props => {\n  const {\n    0: state,\n    1: setState\n  } = useReducer(GlobalReducer, defaultState);\n  return __jsx(GlobalContext.Provider, {\n    value: [state, setState],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nconst UseGlobalState = () => {\n  const {\n    0: state,\n    1: setState\n  } = useContext(GlobalContext);\n\n  const setTheState = ({\n    isLoggedIn,\n    isVolunteer\n  }) => {\n    setState({\n      type: SET_STATE,\n      AisLoggedIn: isLoggedIn,\n      AisVolunteer: isVolunteer\n    });\n  };\n\n  return {\n    setTheState,\n    isLoggedIn: _objectSpread({}, state.isLoggedIn),\n    isVolunteer: _objectSpread({}, state.isVolunteer)\n  };\n};\n\nexport default UseGlobalState;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useContext","useReducer","createContext","GlobalContext","defaultState","isLoggedIn","isVolunteer","GlobalReducer","state","action","type","SET_STATES","AisLoggedIn","AisVolunteer","GlobalProvider","props","setState","children","UseGlobalState","setTheState","SET_STATE"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,aAAvC,QAA2D,OAA3D;AAEA,MAAMC,aAAa,GAAGD,aAAa,EAAnC;AAEA,MAAME,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,UAAL;AACI,+BACOH,KADP;AAEIH,QAAAA,UAAU,oBAAOI,MAAM,CAACG,WAAd,CAFd;AAGIN,QAAAA,WAAW,oBAAMG,MAAM,CAACI,YAAb;AAHf;;AAKJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMM,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAM;AAAA,OAACP,KAAD;AAAA,OAAQQ;AAAR,MAAoBf,UAAU,CAACM,aAAD,EAAgBH,YAAhB,CAApC;AACA,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACI,KAAD,EAAQQ,QAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,KAAK,CAACE,QAHX,CADJ;AAOH,CATM;;AAWP,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM;AAAA,OAACV,KAAD;AAAA,OAAQQ;AAAR,MAAoBhB,UAAU,CAACG,aAAD,CAApC;;AACA,QAAMgB,WAAW,GAAG,CAAC;AAAEd,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,KAAiC;AACjDU,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAEU,SADD;AAELR,MAAAA,WAAW,EAAEP,UAFR;AAGLQ,MAAAA,YAAY,EAAEP;AAHT,KAAD,CAAR;AAKH,GAND;;AAQA,SAAO;AACHa,IAAAA,WADG;AAEHd,IAAAA,UAAU,oBAAOG,KAAK,CAACH,UAAb,CAFP;AAGHC,IAAAA,WAAW,oBAAME,KAAK,CAACF,WAAZ;AAHR,GAAP;AAKH,CAfD;;AAiBA,eAAeY,cAAf","sourcesContent":["import React, {useContext, useReducer, createContext} from 'react';\n\nconst GlobalContext = createContext();\n\nconst defaultState = {\n    isLoggedIn: false,\n    isVolunteer: false  \n};\n\nconst GlobalReducer = (state, action) => {\n    switch (action.type) {\n        case SET_STATES: \n            return {\n                ...state,\n                isLoggedIn: { ...action.AisLoggedIn },\n                isVolunteer: {...action.AisVolunteer }\n            }\n        default:\n            return state;\n    }\n};\n\nexport const GlobalProvider = (props) => {\n    const [state, setState] = useReducer(GlobalReducer, defaultState);\n    return (\n        <GlobalContext.Provider value={[state, setState]}>\n            \n        {/* // <GlobalContext.Provider value=\"green\"> */}\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nconst UseGlobalState = () => {\n    const [state, setState] = useContext(GlobalContext);\n    const setTheState = ({ isLoggedIn, isVolunteer }) => {\n        setState({\n            type: SET_STATE,\n            AisLoggedIn: isLoggedIn,\n            AisVolunteer: isVolunteer\n        });\n    };\n\n    return {\n        setTheState,\n        isLoggedIn: { ...state.isLoggedIn },\n        isVolunteer: {...state.isVolunteer },\n    };\n};\n\nexport default UseGlobalState;"]},"metadata":{},"sourceType":"module"}