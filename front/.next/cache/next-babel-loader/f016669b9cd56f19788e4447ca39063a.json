{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useReducer, createContext } from 'react';\nvar defaultState = {\n  isLoggedIn: false,\n  isVolunteer: false\n};\nvar GlobalContext = createContext(_objectSpread({}, defaultState));\n\nvar GlobalReducer = function GlobalReducer(state, action) {\n  switch (action.type) {\n    case SET_STATES:\n      return _objectSpread({}, state, {\n        isLoggedIn: _objectSpread({}, action.AisLoggedIn),\n        isVolunteer: _objectSpread({}, action.AisVolunteer)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var GlobalProvider = function GlobalProvider(props) {\n  var _useReducer = useReducer(GlobalReducer, defaultState),\n      state = _useReducer[0],\n      setState = _useReducer[1];\n\n  return __jsx(GlobalContext.Provider, {\n    value: [state, setState],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n};\n\nvar UseGlobalState = function UseGlobalState() {\n  var _useContext = useContext(GlobalContext),\n      state = _useContext[0],\n      setState = _useContext[1];\n\n  var setTheState = function setTheState(_ref) {\n    var isLoggedIn = _ref.isLoggedIn,\n        isVolunteer = _ref.isVolunteer;\n    setState({\n      type: SET_STATE,\n      AisLoggedIn: isLoggedIn,\n      AisVolunteer: isVolunteer\n    });\n  };\n\n  return {\n    setTheState: setTheState,\n    isLoggedIn: _objectSpread({}, state.isLoggedIn),\n    isVolunteer: _objectSpread({}, state.isVolunteer)\n  };\n};\n\nexport default UseGlobalState;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useContext","useReducer","createContext","defaultState","isLoggedIn","isVolunteer","GlobalContext","GlobalReducer","state","action","type","SET_STATES","AisLoggedIn","AisVolunteer","GlobalProvider","props","setState","children","UseGlobalState","setTheState","SET_STATE"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,aAAvC,QAA2D,OAA3D;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,IAAMC,aAAa,GAAGJ,aAAa,mBAAKC,YAAL,EAAnC;;AAEA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,UAAL;AACI,+BACOH,KADP;AAEIJ,QAAAA,UAAU,oBAAOK,MAAM,CAACG,WAAd,CAFd;AAGIP,QAAAA,WAAW,oBAAMI,MAAM,CAACI,YAAb;AAHf;;AAKJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,oBACXd,UAAU,CAACM,aAAD,EAAgBJ,YAAhB,CADC;AAAA,MAC9BK,KAD8B;AAAA,MACvBQ,QADuB;;AAErC,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACR,KAAD,EAAQQ,QAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,KAAK,CAACE,QAHX,CADJ;AAOH,CATM;;AAWP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,oBACClB,UAAU,CAACM,aAAD,CADX;AAAA,MAClBE,KADkB;AAAA,MACXQ,QADW;;AAEzB,MAAMG,WAAW,GAAG,SAAdA,WAAc,OAAiC;AAAA,QAA9Bf,UAA8B,QAA9BA,UAA8B;AAAA,QAAlBC,WAAkB,QAAlBA,WAAkB;AACjDW,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAEU,SADD;AAELR,MAAAA,WAAW,EAAER,UAFR;AAGLS,MAAAA,YAAY,EAAER;AAHT,KAAD,CAAR;AAKH,GAND;;AAQA,SAAO;AACHc,IAAAA,WAAW,EAAXA,WADG;AAEHf,IAAAA,UAAU,oBAAOI,KAAK,CAACJ,UAAb,CAFP;AAGHC,IAAAA,WAAW,oBAAMG,KAAK,CAACH,WAAZ;AAHR,GAAP;AAKH,CAfD;;AAiBA,eAAea,cAAf","sourcesContent":["import React, {useContext, useReducer, createContext} from 'react';\n\n\nconst defaultState = {\n    isLoggedIn: false,\n    isVolunteer: false  \n};\n\nconst GlobalContext = createContext({...defaultState});\n\nconst GlobalReducer = (state, action) => {\n    switch (action.type) {\n        case SET_STATES: \n            return {\n                ...state,\n                isLoggedIn: { ...action.AisLoggedIn },\n                isVolunteer: {...action.AisVolunteer }\n            }\n        default:\n            return state;\n    }\n};\n\nexport const GlobalProvider = (props) => {\n    const [state, setState] = useReducer(GlobalReducer, defaultState);\n    return (\n        <GlobalContext.Provider value={[state, setState]}>\n            \n        {/* // <GlobalContext.Provider value=\"green\"> */}\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nconst UseGlobalState = () => {\n    const [state, setState] = useContext(GlobalContext);\n    const setTheState = ({ isLoggedIn, isVolunteer }) => {\n        setState({\n            type: SET_STATE,\n            AisLoggedIn: isLoggedIn,\n            AisVolunteer: isVolunteer\n        });\n    };\n\n    return {\n        setTheState,\n        isLoggedIn: { ...state.isLoggedIn },\n        isVolunteer: {...state.isVolunteer },\n    };\n};\n\nexport default UseGlobalState;"]},"metadata":{},"sourceType":"module"}