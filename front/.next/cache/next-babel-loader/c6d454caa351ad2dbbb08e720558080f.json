{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer } from 'react';\nconst defaultState = {\n  isLoggedIn: false,\n  isVolunteer: false\n}; // const GlobalContext = React.createContext([{}, () => {}]);\n\nconst GlobalContext = React.createContext(_objectSpread({}, defaultState));\n\nconst GlobalProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer((state, action) => {\n    switch (action.type) {\n      case 'change to false':\n        setState({\n          state: false\n        });\n\n      case 'change to true':\n        setState({\n          state: false\n        });\n    }\n  }); // const [state, setState] = useState({...defaultState});\n  // return (\n  //     <GlobalContext.Provider value={[state, setState]}>\n  //     {/* // <GlobalContext.Provider value=\"green\"> */}\n  //         {props.children}\n  //     </GlobalContext.Provider>\n  // );\n};\n\nexport { GlobalContext, GlobalProvider };","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useState","useReducer","defaultState","isLoggedIn","isVolunteer","GlobalContext","createContext","GlobalProvider","children","state","dispatch","action","type","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB,C,CAKA;;AACA,MAAMC,aAAa,GAAGN,KAAK,CAACO,aAAN,mBAAwBJ,YAAxB,EAAtB;;AAGA,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,UAAU,CAAC,CAACQ,KAAD,EAAQE,MAAR,KAAmB;AACpD,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,iBAAL;AACIC,QAAAA,QAAQ,CAAC;AAACJ,UAAAA,KAAK,EAAE;AAAR,SAAD,CAAR;;AACJ,WAAK,gBAAL;AACII,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAD,CAAR;AAJR;AAMH,GAPmC,CAApC,CADqC,CASrC;AACA;AACA;AAEA;AACA;AACA;AACA;AACH,CAjBD;;AAmBA,SAAQJ,aAAR,EAAuBE,cAAvB","sourcesContent":["import React, {useState, useReducer} from 'react';\n\nconst defaultState = {\n    isLoggedIn: false,\n    isVolunteer: false\n};\n\n// const GlobalContext = React.createContext([{}, () => {}]);\nconst GlobalContext = React.createContext({...defaultState});\n\n\nconst GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer((state, action) => {\n        switch(action.type){\n            case 'change to false': \n                setState({state: false});\n            case 'change to true':\n                setState({ state: false });\n        }\n    })\n    // const [state, setState] = useState({...defaultState});\n    // return (\n    //     <GlobalContext.Provider value={[state, setState]}>\n            \n    //     {/* // <GlobalContext.Provider value=\"green\"> */}\n    //         {props.children}\n    //     </GlobalContext.Provider>\n    // );\n}\n\nexport {GlobalContext, GlobalProvider};"]},"metadata":{},"sourceType":"module"}