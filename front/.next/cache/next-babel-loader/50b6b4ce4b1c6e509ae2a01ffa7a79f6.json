{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react'; // let reducer = (info, newInfo) => {\n//     return {...info, ...newInfo};\n// }\n\nconst defaultState = {\n  isLoggedIn: false,\n  type: \"\\orgDash\",\n  page: \"\\login\"\n};\nconst GlobalContext = React.createContext(_objectSpread({}, defaultState));\n\nconst GlobalProvider = props => {\n  // const [info, setInfo] = useReducer(reducer, defaultState);\n  const [info, setInfo] = useState(_objectSpread({}, defaultState));\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      info,\n      setInfo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { GlobalContext, GlobalProvider }; // const GlobalReducer = (state, action) => {\n//     switch (action.type) {\n//         case SET_STATES: \n//             return {\n//                 ...state,\n//                 isLoggedIn: { ...action.AisLoggedIn },\n//                 isVolunteer: {...action.AisVolunteer }\n//             }\n//         default:\n//             return state;\n//     }\n// };\n// const UseGlobalState = () => {\n//     const [state, setState] = useContext(GlobalContext);\n//     const setTheState = ({ aisLoggedIn, aisVolunteer }) => {\n//         setState({\n//             type: SET_STATE,\n//             isLoggedIn: aisLoggedIn,\n//             isVolunteer: aisVolunteer\n//         });\n//     };\n//     return {\n//         setTheState,\n//         isLoggedIn: { ...state.isLoggedIn },\n//         isVolunteer: {...state.isVolunteer },\n//     };\n// };\n// export default UseGlobalState;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useReducer","defaultState","isLoggedIn","type","page","GlobalContext","createContext","GlobalProvider","props","info","setInfo","useState","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE,UAFW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;AAMA,MAAMC,aAAa,GAAGN,KAAK,CAACO,aAAN,mBAAwBL,YAAxB,EAAtB;;AAEA,MAAMM,cAAc,GAAIC,KAAD,IAAW;AAC9B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,mBAAKV,YAAL,EAAhC;AACA,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACI,QADX,CADJ;AAKH,CARD;;AAUA,SAAQP,aAAR,EAAuBE,cAAvB,G,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer } from 'react';\n\n// let reducer = (info, newInfo) => {\n//     return {...info, ...newInfo};\n// }\n\nconst defaultState = {\n    isLoggedIn: false,\n    type: \"\\orgDash\",\n    page: \"\\login\"\n};\n\nconst GlobalContext = React.createContext({...defaultState});\n\nconst GlobalProvider = (props) => {\n    // const [info, setInfo] = useReducer(reducer, defaultState);\n    const [info, setInfo] = useState({...defaultState});\n    return (\n        <GlobalContext.Provider value={{info, setInfo}}>\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport {GlobalContext, GlobalProvider};\n\n\n// const GlobalReducer = (state, action) => {\n//     switch (action.type) {\n//         case SET_STATES: \n//             return {\n//                 ...state,\n//                 isLoggedIn: { ...action.AisLoggedIn },\n//                 isVolunteer: {...action.AisVolunteer }\n//             }\n//         default:\n//             return state;\n//     }\n// };\n\n\n// const UseGlobalState = () => {\n//     const [state, setState] = useContext(GlobalContext);\n\n//     const setTheState = ({ aisLoggedIn, aisVolunteer }) => {\n//         setState({\n//             type: SET_STATE,\n//             isLoggedIn: aisLoggedIn,\n//             isVolunteer: aisVolunteer\n//         });\n//     };\n\n//     return {\n//         setTheState,\n//         isLoggedIn: { ...state.isLoggedIn },\n//         isVolunteer: {...state.isVolunteer },\n//     };\n// };\n\n// export default UseGlobalState;"]},"metadata":{},"sourceType":"module"}