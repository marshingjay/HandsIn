{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer } from 'react';\nconst GlobalContext = React.createContext();\nconst defaultState = {\n  start: {\n    isLoggedIn: false,\n    isVolunteer: false\n  }\n};\n\nconst GlobalReducer = (state, action) => {\n  switch (action.type) {\n    case SET_STATES:\n      return _objectSpread({}, state, {\n        start: _objectSpread({}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n}; // const GlobalContext = React.createContext([{}, () => {}]);\n// const GlobalContext = React.createContext({...defaultState});\n\n\nconst GlobalProvider = props => {\n  // const [state, dispatch] = useReducer((state, action) => {\n  //     switch(action.type){\n  //         case 'change to false': \n  //             setState({state: false});\n  //         case 'change to true':\n  //             setState({ state: false });\n  //     }\n  // })\n  // const [state, setState] = useState('');\n  const {\n    0: state,\n    1: setState\n  } = useReducer(GlobalReducer, defaultState);\n  return __jsx(GlobalContext.Provider, {\n    value: [state, setState],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { GlobalContext, GlobalProvider };","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useState","useReducer","GlobalContext","createContext","defaultState","start","isLoggedIn","isVolunteer","GlobalReducer","state","action","type","SET_STATES","payload","GlobalProvider","props","setState","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAEA,MAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,EAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,KADT;AAEHC,IAAAA,WAAW,EAAE;AAFV;AADU,CAArB;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,UAAL;AACI,+BACOH,KADP;AAEIJ,QAAAA,KAAK,oBAAOK,MAAM,CAACG,OAAd;AAFT;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAVD,C,CAWA;AACA;;;AAGA,MAAMK,cAAc,GAAIC,KAAD,IAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQO;AAAR,MAAoBf,UAAU,CAACO,aAAD,EAAgBJ,YAAhB,CAApC;AACA,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACK,KAAD,EAAQO,QAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,KAAK,CAACE,QAHX,CADJ;AAOH,CAlBD;;AAoBA,SAAQf,aAAR,EAAuBY,cAAvB","sourcesContent":["import React, {useState, useReducer} from 'react';\n\nconst GlobalContext = React.createContext();\n\nconst defaultState = {\n    start: {\n        isLoggedIn: false,\n        isVolunteer: false\n    }\n    \n};\n\nconst GlobalReducer = (state, action) => {\n    switch (action.type) {\n        case SET_STATES: \n            return {\n                ...state,\n                start: { ...action.payload }\n            }\n        default:\n            return state;\n    }\n}\n// const GlobalContext = React.createContext([{}, () => {}]);\n// const GlobalContext = React.createContext({...defaultState});\n\n\nconst GlobalProvider = (props) => {\n    // const [state, dispatch] = useReducer((state, action) => {\n    //     switch(action.type){\n    //         case 'change to false': \n    //             setState({state: false});\n    //         case 'change to true':\n    //             setState({ state: false });\n    //     }\n    // })\n    // const [state, setState] = useState('');\n    const [state, setState] = useReducer(GlobalReducer, defaultState);\n    return (\n        <GlobalContext.Provider value={[state, setState]}>\n            \n        {/* // <GlobalContext.Provider value=\"green\"> */}\n            {props.children}\n        </GlobalContext.Provider>\n    );\n}\n\nexport {GlobalContext, GlobalProvider};"]},"metadata":{},"sourceType":"module"}