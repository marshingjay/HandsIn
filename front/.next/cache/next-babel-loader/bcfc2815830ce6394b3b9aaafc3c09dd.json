{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport Header from '../components/Header';\nimport React from 'react'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleLogin\",\n    value: function handleLogin(e) {\n      var isLoggedIn = e.target.isLoggedIn;\n      var isVolunteer = e.target.isVolunteer;\n      this.props.onLogin(isLoggedIn, isVolunteer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Login\"), __jsx(\"select\", {\n        onChange: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        isLoggedIn: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n        isLoggedIn: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Just place holding for state, select if logged in\")), __jsx(\"select\", {\n        onChange: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        isVolunteer: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Organization\"), __jsx(\"option\", {\n        isVolunteer: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Volunteer\")));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","Header","React","Login","props","handleLogin","bind","e","isLoggedIn","target","isVolunteer","onLogin","Component"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAFc;AAGjB;;;;gCAEWC,C,EAAG;AACX,UAAMC,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASD,UAA5B;AACA,UAAME,WAAW,GAAGH,CAAC,CAACE,MAAF,CAASC,WAA7B;AACA,WAAKN,KAAL,CAAWO,OAAX,CAAmBH,UAAnB,EAA+BE,WAA/B;AACH;;;6BAEQ;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,QAAA,QAAQ,EAAE,KAAKL,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,UAAU,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,EAEI;AAAQ,QAAA,UAAU,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,CAHJ,EAQI;AAAQ,QAAA,QAAQ,EAAE,KAAKA,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,WAAW,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAQ,QAAA,WAAW,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CARJ,CADJ;AAeH;;;;EA5BeH,KAAK,CAACU,S;;AA+B1B,eAAeT,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport Header from '../components/Header';\nimport React from 'react';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nclass Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLogin(e) {\n        const isLoggedIn = e.target.isLoggedIn;\n        const isVolunteer = e.target.isVolunteer;\n        this.props.onLogin(isLoggedIn, isVolunteer);\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Header />\n                <p>Login</p>\n                <select onChange={this.handleLogin}>\n                    <option isLoggedIn={false}>Just place holding for state, select if NOT logged in</option>\n                    <option isLoggedIn={true}>Just place holding for state, select if logged in</option>\n                </select> \n\n                <select onChange={this.handleLogin}>\n                    <option isVolunteer={false}>Organization</option>\n                    <option isVolunteer={true}>Volunteer</option>\n                </select> \n            </Layout>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}