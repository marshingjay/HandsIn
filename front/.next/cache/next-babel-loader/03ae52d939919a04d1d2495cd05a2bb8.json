{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer } from 'react'; // let reducer = (info, newInfo) => {\n//     return {...info, ...newInfo};\n// }\n\nvar defaultState = {\n  isLoggedIn: false,\n  type: \"\\orgDash\",\n  page: \"\\login\"\n};\nvar GlobalContext = React.createContext(_objectSpread({}, defaultState));\n\nvar GlobalProvider = function GlobalProvider(props) {\n  // const [info, setInfo] = useReducer(reducer, defaultState);\n  // const [info, setInfo] = useState(GlobalContext);\n  return __jsx(GlobalContext.Provider, {\n    value: defaultState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.children);\n};\n\nexport { GlobalContext, GlobalProvider }; // const GlobalReducer = (state, action) => {\n//     switch (action.type) {\n//         case SET_STATES: \n//             return {\n//                 ...state,\n//                 isLoggedIn: { ...action.AisLoggedIn },\n//                 isVolunteer: {...action.AisVolunteer }\n//             }\n//         default:\n//             return state;\n//     }\n// };\n// const UseGlobalState = () => {\n//     const [state, setState] = useContext(GlobalContext);\n//     const setTheState = ({ aisLoggedIn, aisVolunteer }) => {\n//         setState({\n//             type: SET_STATE,\n//             isLoggedIn: aisLoggedIn,\n//             isVolunteer: aisVolunteer\n//         });\n//     };\n//     return {\n//         setTheState,\n//         isLoggedIn: { ...state.isLoggedIn },\n//         isVolunteer: {...state.isVolunteer },\n//     };\n// };\n// export default UseGlobalState;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/components/GlobalContext.js"],"names":["React","useState","useReducer","defaultState","isLoggedIn","type","page","GlobalContext","createContext","GlobalProvider","props","children"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C,C,CAEA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE,UAFW;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAArB;AAMA,IAAMC,aAAa,GAAGP,KAAK,CAACQ,aAAN,mBAAwBL,YAAxB,EAAtB;;AAEA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B;AACA;AACA,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEP,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,KAAK,CAACC,QADX,CADJ;AAKH,CARD;;AAUA,SAAQJ,aAAR,EAAuBE,cAAvB,G,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useReducer } from 'react';\n\n// let reducer = (info, newInfo) => {\n//     return {...info, ...newInfo};\n// }\n\nconst defaultState = {\n    isLoggedIn: false,\n    type: \"\\orgDash\",\n    page: \"\\login\"\n};\n\nconst GlobalContext = React.createContext({...defaultState});\n\nconst GlobalProvider = (props) => {\n    // const [info, setInfo] = useReducer(reducer, defaultState);\n    // const [info, setInfo] = useState(GlobalContext);\n    return (\n        <GlobalContext.Provider value={defaultState}>\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport {GlobalContext, GlobalProvider};\n\n\n// const GlobalReducer = (state, action) => {\n//     switch (action.type) {\n//         case SET_STATES: \n//             return {\n//                 ...state,\n//                 isLoggedIn: { ...action.AisLoggedIn },\n//                 isVolunteer: {...action.AisVolunteer }\n//             }\n//         default:\n//             return state;\n//     }\n// };\n\n\n// const UseGlobalState = () => {\n//     const [state, setState] = useContext(GlobalContext);\n\n//     const setTheState = ({ aisLoggedIn, aisVolunteer }) => {\n//         setState({\n//             type: SET_STATE,\n//             isLoggedIn: aisLoggedIn,\n//             isVolunteer: aisVolunteer\n//         });\n//     };\n\n//     return {\n//         setTheState,\n//         isLoggedIn: { ...state.isLoggedIn },\n//         isVolunteer: {...state.isVolunteer },\n//     };\n// };\n\n// export default UseGlobalState;"]},"metadata":{},"sourceType":"module"}