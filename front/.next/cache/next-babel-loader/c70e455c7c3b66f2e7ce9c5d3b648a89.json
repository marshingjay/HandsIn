{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\nimport GlobalContext from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar Login = function Login() {\n  var _useContext = useContext(GlobalContext),\n      data = _useContext.data; // const [isLoggedIn, setIsLoggedIn] = useState('');\n  // const [state, setState] = useContext(GlobalContext);\n\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, data.isLoggedIn));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","GlobalContext","Login","data","isLoggedIn"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,oBACCH,UAAU,CAACE,aAAD,CADX;AAAA,MACRE,IADQ,eACRA,IADQ,EAEhB;AACA;;;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACC,UAAT,CAPJ,CADJ;AAeH,CAnBD;;AAqBA,eAAeF,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\n\nimport GlobalContext from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst Login = () => {\n    const { data } = useContext(GlobalContext);\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    return (\n        <Layout>\n            <p>Login</p>\n            {/* <select onChange={() => setIsLoggedIn((setUsername(true)))}>\n                <option isLoggedIn={false}>Just place holding for state, select if NOT logged in</option>\n                <option isLoggedIn={true}>Just place holding for state, select if logged in</option>\n            </select>  */}\n\n            <p>{data.isLoggedIn}</p>\n            {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n        </Layout>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}