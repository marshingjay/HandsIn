{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst toggleLoggedIn = (state, newState) => {\n  state.isLoggedIn = newState;\n};\n\nconst toggleType = (state, setState) => {\n  if (state.isVolunteer) {\n    dispatch({\n      isVolunteer: false\n    });\n  } else {\n    dispatch({\n      isVolunteer: true\n    });\n  }\n};\n\nconst state = useContext(GlobalContext);\nconst {\n  setState\n} = state;\n\nclass Login extends React.Component {\n  // const [state, setState] = useContext(GlobalContext);\n  // const {isLoggedIn, isVolunteer} = state;\n  // const [isLoggedIn, setIsLoggedIn] = useState('');\n  // const [state, setState] = useContext(GlobalContext);\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Login\"), __jsx(\"select\", {\n      onChange: e => toggleLoggedIn(state, e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Here\", state.isLoggedIn));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","GlobalContext","toggleLoggedIn","state","newState","isLoggedIn","toggleType","setState","isVolunteer","dispatch","Login","Component","render","e","target","value"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCD,EAAAA,KAAK,CAACE,UAAN,GAAmBD,QAAnB;AACH,CAFD;;AAIA,MAAME,UAAU,GAAG,CAACH,KAAD,EAAQI,QAAR,KAAqB;AACpC,MAAIJ,KAAK,CAACK,WAAV,EAAuB;AACnBC,IAAAA,QAAQ,CAAC;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAR;AACH,GAFD,MAEO;AACHC,IAAAA,QAAQ,CAAC;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAR;AACH;AACJ,CAND;;AAQA,MAAML,KAAK,GAAGJ,UAAU,CAACE,aAAD,CAAxB;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAeJ,KAArB;;AAEA,MAAMO,KAAN,SAAoBZ,KAAK,CAACa,SAA1B,CAAoC;AAChC;AAEA;AACA;AACA;AACAC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,MAAA,QAAQ,EAAGC,CAAD,IAAOX,cAAc,CAACC,KAAD,EAAQU,CAAC,CAACC,MAAF,CAASC,KAAjB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADJ,EAEI;AAAQ,MAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQZ,KAAK,CAACE,UAAd,CAPJ,CADJ;AAeH;;AAtB+B;;AA0BpC,eAAeK,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState) => {\n    state.isLoggedIn = newState;\n}\n\nconst toggleType = (state, setState) => {\n    if (state.isVolunteer) {\n        dispatch({ isVolunteer: false });\n    } else {\n        dispatch({ isVolunteer: true });\n    }\n}\n\nconst state = useContext(GlobalContext);\nconst { setState } = state;\n\nclass Login extends React.Component {\n    // const [state, setState] = useContext(GlobalContext);\n    \n    // const {isLoggedIn, isVolunteer} = state;\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    render() {\n        return (\n            <Layout>\n                <p>Login</p>\n                <select onChange={(e) => toggleLoggedIn(state, e.target.value)}>\n                    <option value={false} >Just place holding for state, select if NOT logged in</option>\n                    <option value={true}>Just place holding for state, select if logged in</option>\n                </select>\n\n                <p>Here{state.isLoggedIn}</p>\n                {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n            </Layout>\n        )\n    };\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}