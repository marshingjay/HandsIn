{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar toggleLoggedIn = function toggleLoggedIn(state, newState, forceUpdate) {\n  state.isLoggedIn = newState;\n  forceUpdate();\n};\n\nvar toggleType = function toggleType(state, newState, forceUpdate) {\n  state.isVolunteer = newState;\n  forceUpdate();\n};\n\nvar Login = function Login() {\n  var state = useContext(GlobalContext);\n  var dispatch = state.dispatch; // const {state, setState} = useContext(GlobalContext);\n\n  var forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return dispatch({\n        type: 'change'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Here\", state.isLoggedIn), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return toggleType(state, e.target.value, forceUpdate);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Volunteer\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","GlobalContext","toggleLoggedIn","state","newState","forceUpdate","isLoggedIn","toggleType","isVolunteer","Login","dispatch","bind","e","type","target","value"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,OAAzD;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,EAAkC;AACrDF,EAAAA,KAAK,CAACG,UAAN,GAAmBF,QAAnB;AACAC,EAAAA,WAAW;AACd,CAHD;;AAKA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACJ,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,EAAkC;AACjDF,EAAAA,KAAK,CAACK,WAAN,GAAoBJ,QAApB;AACAC,EAAAA,WAAW;AACd,CAHD;;AAMA,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMN,KAAK,GAAGL,UAAU,CAACG,aAAD,CAAxB;AADgB,MAERS,QAFQ,GAEKP,KAFL,CAERO,QAFQ,EAGhB;;AACA,MAAML,WAAW,GAAGR,KAAK,CAACE,QAAN,GAAiB,CAAjB,EAAoBY,IAApB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII;AAAQ,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOF,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAf;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,EAEI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,CAJJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQV,KAAK,CAACG,UAAd,CATJ,EAUI;AAAQ,IAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,aAAOL,UAAU,CAACJ,KAAD,EAAQS,CAAC,CAACE,MAAF,CAASC,KAAjB,EAAwBV,WAAxB,CAAjB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAVJ,CADJ;AAiBH,CAvBD;;AAyBA,eAAeI,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState, forceUpdate) => {\n    state.isLoggedIn = newState;\n    forceUpdate();\n}\n\nconst toggleType = (state, newState, forceUpdate) => {\n    state.isVolunteer = newState;\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    const { dispatch } = state;\n    // const {state, setState} = useContext(GlobalContext);\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            {/* <select onChange={(e) => toggleLoggedIn(state, e.target.value, forceUpdate)}> */}\n            <select onChange={(e) => dispatch({type: 'change'})}>\n                <option value={false} >Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn}</p>\n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value={false}>Organization</option>\n                <option value={true}>Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}