{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nfunction updatePage(theState) {\n  console.log(theState.isLoggedIn);\n\n  if (theState.isLoggedIn = true) {\n    console.log(\"in here now\");\n    theState.page = theState.type;\n  }\n}\n\nfunction toggleLoggedIn(theState, newState, forceUpdate) {\n  theState.isLoggedIn = newState;\n  console.log(theState.isLoggedIn);\n\n  if (theState.isLoggedIn == true) {\n    console.log(\"in here now\");\n    theState.page = theState.type;\n  } else {\n    theState.page = '\\login';\n  } // if(!newState) {\n  //     theState.page = \"\\login\";\n  // }\n\n\n  forceUpdate();\n  console.log(theState.isLoggedIn); // updatePage(theState);\n}\n\nfunction toggleType(theState, newState, forceUpdate) {\n  theState.type = newState;\n  toggleLoggedIn(theState, theState.isLoggedIn, forceUpdate);\n  updatePage(theState); // forceUpdate();\n}\n\nconst Login = () => {\n  const theState = useContext(GlobalContext); // const {info, setInfo} = useContext(GlobalContext);\n\n  const forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: e => toggleLoggedIn(theState.isLoggedIn, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Here\", theState.isLoggedIn, \" \", theState.page), __jsx(\"select\", {\n    onChange: e => toggleType(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"/orgDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: \"/userDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Volunteer\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","Header","GlobalContext","updatePage","theState","console","log","isLoggedIn","page","type","toggleLoggedIn","newState","forceUpdate","toggleType","Login","bind","e","target","value","state"],"mappings":"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","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nfunction updatePage(theState) {\n    console.log(theState.isLoggedIn);\n    if (theState.isLoggedIn = true) {\n        console.log(\"in here now\");\n        theState.page = theState.type;\n    }\n}\n\nfunction toggleLoggedIn(theState, newState, forceUpdate) {\n    theState.isLoggedIn = newState;\n    console.log(theState.isLoggedIn);\n    if(theState.isLoggedIn == true){\n        console.log(\"in here now\");\n        theState.page = theState.type;\n    } else {\n        theState.page = '\\login';\n    }\n    \n    // if(!newState) {\n    //     theState.page = \"\\login\";\n    // }\n    \n    forceUpdate();\n    console.log(theState.isLoggedIn);\n    // updatePage(theState);\n}\n\nfunction toggleType(theState, newState, forceUpdate) {\n    theState.type = newState;\n    toggleLoggedIn(theState, theState.isLoggedIn, forceUpdate);\n    updatePage(theState);\n    // forceUpdate();\n}\n\n\nconst Login = () => {\n    const theState = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(theState.isLoggedIn, e.target.value, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{theState.isLoggedIn} {theState.page}</p>\n            \n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value=\"/orgDash\" >Organization</option>\n                <option value=\"/userDash\">Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}