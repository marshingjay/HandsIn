{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../components/TheLayout';\nimport Header from '../components/Header';\nimport React, { useContext } from 'react';\nimport GlobalContext from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst Login = () => {\n  const {\n    0: state,\n    1: setState\n  } = useContext(GlobalContext);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: () => setState(state => _objectSpread({}, state, {\n      isLoggedIn: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    isLoggedIn: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    isLoggedIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","Header","React","useContext","GlobalContext","Login","state","setState","isLoggedIn"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;AACA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,UAAU,CAACC,aAAD,CAApC;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,QAAQ,EAAE,MAAMG,QAAQ,CAACD,KAAK,sBAASA,KAAT;AAAgBE,MAAAA,UAAU,EAAE;AAA5B,MAAN,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,UAAU,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,EAEI;AAAQ,IAAA,UAAU,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,CAFJ,CADJ;AAcH,CAjBD;;AAmBA,eAAeH,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport Header from '../components/Header';\nimport React, { useContext } from 'react';\n\nimport GlobalContext from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst Login = () => {\n    const [state, setState] = useContext(GlobalContext);\n\n    return (\n        <Layout>\n            <p>Login</p>\n            <select onChange={() => setState(state => ({...state, isLoggedIn: true}))}>\n                <option isLoggedIn={false}>Just place holding for state, select if NOT logged in</option>\n                <option isLoggedIn={true}>Just place holding for state, select if logged in</option>\n            </select> \n\n            {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n        </Layout>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}