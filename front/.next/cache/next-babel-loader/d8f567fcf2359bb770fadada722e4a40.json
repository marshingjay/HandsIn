{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nconst updateLinks = state => {\n  if (state.isLoggedIn == \"true\") {\n    state.page = state.type;\n  } else {\n    state.page = \"\\login\";\n  }\n};\n\nfunction toggleLoggedIn(state, newState, forceUpdate) {\n  state.isLoggedIn = newState;\n  updateLinks(state);\n  forceUpdate();\n}\n\nfunction toggleType(state, newState, forceUpdate) {\n  state.type = newState;\n  updateLinks(state);\n  forceUpdate(); // toggleLoggedIn(state, state.isLoggedIn, forceUpdate);\n  // updatePage(state);\n  // forceUpdate();\n}\n\nconst Login = () => {\n  const state = useContext(GlobalContext); // const {info, setInfo} = useContext(GlobalContext);\n\n  const forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"form\", {\n    onSubmit: () => toggleLoggedIn(state, true, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(\"select\", {\n    onChange: e => toggleType(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"/orgDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: \"/userDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Volunteer\"))), __jsx(\"text\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Here\", state.isLoggedIn, \" \", state.page), __jsx(\"button\", {\n    onClick: () => toggleLoggedIn(state, true, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign Up\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","Header","GlobalContext","updateLinks","state","isLoggedIn","page","type","toggleLoggedIn","newState","forceUpdate","toggleType","Login","bind","e","target","value"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,MAAIA,KAAK,CAACC,UAAN,IAAoB,MAAxB,EAAgC;AAC5BD,IAAAA,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACG,IAAnB;AACH,GAFD,MAEO;AACHH,IAAAA,KAAK,CAACE,IAAN,GAAa,QAAb;AACH;AACJ,CAND;;AAQA,SAASE,cAAT,CAAwBJ,KAAxB,EAA+BK,QAA/B,EAAyCC,WAAzC,EAAsD;AAClDN,EAAAA,KAAK,CAACC,UAAN,GAAmBI,QAAnB;AACAN,EAAAA,WAAW,CAACC,KAAD,CAAX;AACAM,EAAAA,WAAW;AACd;;AAED,SAASC,UAAT,CAAoBP,KAApB,EAA2BK,QAA3B,EAAqCC,WAArC,EAAkD;AAC9CN,EAAAA,KAAK,CAACG,IAAN,GAAaE,QAAb;AACAN,EAAAA,WAAW,CAACC,KAAD,CAAX;AACAM,EAAAA,WAAW,GAHmC,CAI9C;AACA;AACA;AACH;;AAGD,MAAME,KAAK,GAAG,MAAM;AAChB,QAAMR,KAAK,GAAGN,UAAU,CAACI,aAAD,CAAxB,CADgB,CAEhB;;AAEA,QAAMQ,WAAW,GAAGb,KAAK,CAACE,QAAN,GAAiB,CAAjB,EAAoBc,IAApB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAM,IAAA,QAAQ,EAAE,MAAIL,cAAc,CAACJ,KAAD,EAAQ,IAAR,EAAcM,WAAd,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAU,IAAA,WAAW,EAAE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI;AAAQ,IAAA,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACP,KAAD,EAAQU,CAAC,CAACC,MAAF,CAASC,KAAjB,EAAwBN,WAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CALJ,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,EAGI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,CAbJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQN,KAAK,CAACC,UAAd,OAA2BD,KAAK,CAACE,IAAjC,CAnBJ,EAuBI;AAAQ,IAAA,OAAO,EAAE,MAAME,cAAc,CAACJ,KAAD,EAAQ,IAAR,EAAcM,WAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBJ,CADJ;AA2BH,CAjCD;;AAmCA,eAAeE,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst updateLinks = (state) => {\n    if (state.isLoggedIn == \"true\") {\n        state.page = state.type;\n    } else {\n        state.page = \"\\login\";\n    }\n}\n\nfunction toggleLoggedIn(state, newState, forceUpdate) {\n    state.isLoggedIn = newState;\n    updateLinks(state)\n    forceUpdate();\n}\n\nfunction toggleType(state, newState, forceUpdate) {\n    state.type = newState;\n    updateLinks(state);\n    forceUpdate();\n    // toggleLoggedIn(state, state.isLoggedIn, forceUpdate);\n    // updatePage(state);\n    // forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n            <form onSubmit={()=>toggleLoggedIn(state, true, forceUpdate)}>\n                <label>\n                    <textarea placeholder={\"email\"}/>\n                </label>\n                \n                <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                    <option value=\"/orgDash\" >Organization</option>\n                    <option value=\"/userDash\">Volunteer</option>\n                </select>\n            </form>\n\n            <text>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </text>\n\n            <p>Here{state.isLoggedIn} {state.page}</p>\n            \n            \n\n            <button onClick={() => toggleLoggedIn(state, true, forceUpdate)}>Sign Up</button>\n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}