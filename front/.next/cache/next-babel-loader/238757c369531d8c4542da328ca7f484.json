{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nfunction updateLinks(theState, state, forceUpdate) {\n  console.log(theState);\n\n  if (theState.value) {\n    console.log(\"in here now\");\n    state.page = state.type;\n  }\n\n  forceUpdate();\n}\n\nfunction toggleLoggedIn(state, newState, forceUpdate) {\n  state.isLoggedIn = newState;\n  forceUpdate();\n}\n\nfunction toggleType(state, newState, forceUpdate) {\n  state.type = newState;\n  forceUpdate(); // toggleLoggedIn(state, state.isLoggedIn, forceUpdate);\n  // updatePage(state);\n  // forceUpdate();\n}\n\nconst Login = () => {\n  const state = useContext(GlobalContext); // const {info, setInfo} = useContext(GlobalContext);\n\n  const forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: e => toggleLoggedIn(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Here\", state.isLoggedIn, \" \", state.page), __jsx(\"select\", {\n    onChange: e => toggleType(state, e.target.value, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"/orgDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: \"/userDash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Volunteer\")), __jsx(\"button\", {\n    onClick: () => updateLinks(state.isLoggedIn, state, forceUpdate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign Up\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","Header","GlobalContext","updateLinks","theState","state","forceUpdate","console","log","value","page","type","toggleLoggedIn","newState","isLoggedIn","toggleType","Login","bind","e","target"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,WAAtC,EAAmD;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,MAAIA,QAAQ,CAACK,KAAb,EAAoB;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAH,IAAAA,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACM,IAAnB;AACH;;AACDL,EAAAA,WAAW;AACd;;AAED,SAASM,cAAT,CAAwBP,KAAxB,EAA+BQ,QAA/B,EAAyCP,WAAzC,EAAsD;AAClDD,EAAAA,KAAK,CAACS,UAAN,GAAmBD,QAAnB;AACAP,EAAAA,WAAW;AACd;;AAED,SAASS,UAAT,CAAoBV,KAApB,EAA2BQ,QAA3B,EAAqCP,WAArC,EAAkD;AAC9CD,EAAAA,KAAK,CAACM,IAAN,GAAaE,QAAb;AACAP,EAAAA,WAAW,GAFmC,CAG9C;AACA;AACA;AACH;;AAGD,MAAMU,KAAK,GAAG,MAAM;AAChB,QAAMX,KAAK,GAAGP,UAAU,CAACI,aAAD,CAAxB,CADgB,CAEhB;;AAEA,QAAMI,WAAW,GAAGT,KAAK,CAACE,QAAN,GAAiB,CAAjB,EAAoBkB,IAApB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGI;AAAQ,IAAA,QAAQ,EAAGC,CAAD,IAAON,cAAc,CAACP,KAAD,EAAQa,CAAC,CAACC,MAAF,CAASV,KAAjB,EAAwBH,WAAxB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,EAGI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,CAHJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQD,KAAK,CAACS,UAAd,OAA2BT,KAAK,CAACK,IAAjC,CATJ,EAWI;AAAQ,IAAA,QAAQ,EAAGQ,CAAD,IAAOH,UAAU,CAACV,KAAD,EAAQa,CAAC,CAACC,MAAF,CAASV,KAAjB,EAAwBH,WAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAXJ,EAgBI;AAAQ,IAAA,OAAO,EAAE,MAAMH,WAAW,CAACE,KAAK,CAACS,UAAP,EAAmBT,KAAnB,EAA0BC,WAA1B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,CADJ;AAoBH,CA1BD;;AA4BA,eAAeU,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nfunction updateLinks(theState, state, forceUpdate) {\n    console.log(theState);\n    if (theState.value) {\n        console.log(\"in here now\");\n        state.page = state.type;\n    }\n    forceUpdate();\n}\n\nfunction toggleLoggedIn(state, newState, forceUpdate) {\n    state.isLoggedIn = newState;\n    forceUpdate();\n}\n\nfunction toggleType(state, newState, forceUpdate) {\n    state.type = newState;\n    forceUpdate();\n    // toggleLoggedIn(state, state.isLoggedIn, forceUpdate);\n    // updatePage(state);\n    // forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(state, e.target.value, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn} {state.page}</p>\n            \n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value=\"/orgDash\" >Organization</option>\n                <option value=\"/userDash\">Volunteer</option>\n            </select>\n\n            <button onClick={() => updateLinks(state.isLoggedIn, state, forceUpdate)}>Sign Up</button>\n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}