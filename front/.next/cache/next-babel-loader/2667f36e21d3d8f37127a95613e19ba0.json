{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar toggleLoggedIn = function toggleLoggedIn(state, newState) {\n  state.isLoggedIn = newState;\n};\n\nvar toggleType = function toggleType(state, setState) {\n  if (state.isVolunteer) {\n    dispatch({\n      isVolunteer: false\n    });\n  } else {\n    dispatch({\n      isVolunteer: true\n    });\n  }\n};\n\nvar state = useContext(GlobalContext);\nvar setState = state.setState;\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    // const [state, setState] = useContext(GlobalContext);\n    // const {isLoggedIn, isVolunteer} = state;\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Login\"), __jsx(\"select\", {\n        onChange: function onChange(e) {\n          return toggleLoggedIn(state, e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Here\", state.isLoggedIn));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","GlobalContext","toggleLoggedIn","state","newState","isLoggedIn","toggleType","setState","isVolunteer","dispatch","Login","e","target","value","Component"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACxCD,EAAAA,KAAK,CAACE,UAAN,GAAmBD,QAAnB;AACH,CAFD;;AAIA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAQI,QAAR,EAAqB;AACpC,MAAIJ,KAAK,CAACK,WAAV,EAAuB;AACnBC,IAAAA,QAAQ,CAAC;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAR;AACH,GAFD,MAEO;AACHC,IAAAA,QAAQ,CAAC;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAD,CAAR;AACH;AACJ,CAND;;AAQA,IAAML,KAAK,GAAGJ,UAAU,CAACE,aAAD,CAAxB;IACQM,Q,GAAaJ,K,CAAbI,Q;;IAEFG,K;;;;;;;;;;;;;AACF;AAEA;AACA;AACA;6BACS;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,iBAAOT,cAAc,CAACC,KAAD,EAAQQ,CAAC,CAACC,MAAF,CAASC,KAAjB,CAArB;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,EAEI;AAAQ,QAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQV,KAAK,CAACE,UAAd,CAPJ,CADJ;AAeH;;;;EAtBeP,KAAK,CAACgB,S;;AA0B1B,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState) => {\n    state.isLoggedIn = newState;\n}\n\nconst toggleType = (state, setState) => {\n    if (state.isVolunteer) {\n        dispatch({ isVolunteer: false });\n    } else {\n        dispatch({ isVolunteer: true });\n    }\n}\n\nconst state = useContext(GlobalContext);\nconst { setState } = state;\n\nclass Login extends React.Component {\n    // const [state, setState] = useContext(GlobalContext);\n    \n    // const {isLoggedIn, isVolunteer} = state;\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    render() {\n        return (\n            <Layout>\n                <p>Login</p>\n                <select onChange={(e) => toggleLoggedIn(state, e.target.value)}>\n                    <option value={false} >Just place holding for state, select if NOT logged in</option>\n                    <option value={true}>Just place holding for state, select if logged in</option>\n                </select>\n\n                <p>Here{state.isLoggedIn}</p>\n                {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n            </Layout>\n        )\n    };\n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}