{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/TheLayout';\nimport React, { useContext } from 'react';\nimport GlobalContext from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar _useContext = useContext(GlobalContext),\n    state = _useContext[0],\n    setState = _useContext[1];\n\nvar Login = function Login() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: function onChange() {\n      return setState(function (state) {\n        return _objectSpread({}, state, {\n          isLoggedIn: true\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    isLoggedIn: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    isLoggedIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","GlobalContext","state","setState","Login","isLoggedIn"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;AACA;;kBAC0BD,UAAU,CAACC,aAAD,C;IAA7BC,K;IAAOC,Q;;AACd,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,QAAQ,EAAE;AAAA,aAAMD,QAAQ,CAAC,UAAAD,KAAK;AAAA,iCAASA,KAAT;AAAgBG,UAAAA,UAAU,EAAE;AAA5B;AAAA,OAAN,CAAd;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,UAAU,EAAE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ,EAEI;AAAQ,IAAA,UAAU,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,CAFJ,CADJ;AAcH,CAfD;;AAiBA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext } from 'react';\n\nimport GlobalContext from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst [state, setState] = useContext(GlobalContext);\nconst Login = () => {\n    return (\n        <Layout>\n            <p>Login</p>\n            <select onChange={() => setState(state => ({...state, isLoggedIn: true}))}>\n                <option isLoggedIn={false}>Just place holding for state, select if NOT logged in</option>\n                <option isLoggedIn={true}>Just place holding for state, select if logged in</option>\n            </select> \n\n            {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n        </Layout>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}