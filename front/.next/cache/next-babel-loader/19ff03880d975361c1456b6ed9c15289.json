{"ast":null,"code":"var _jsxFileName = \"/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js\";\nvar __jsx = React.createElement;\nimport Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\nimport { GlobalContext } from '../components/GlobalContext'; // need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\n\nvar toggleLoggedIn = function toggleLoggedIn(state, newState, type, forceUpdate) {\n  state.isLoggedIn = newState;\n\n  if (newState == true) {\n    state.page = state.type;\n  }\n\n  forceUpdate();\n};\n\nvar toggleType = function toggleType(state, newState, forceUpdate) {\n  state.isVolunteer = newState;\n  forceUpdate();\n};\n\nvar Login = function Login() {\n  var state = useContext(GlobalContext); // const {info, setInfo} = useContext(GlobalContext);\n\n  var forceUpdate = React.useState()[1].bind(null, {});\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Login\"), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return toggleLoggedIn(state, e.target.value, type, forceUpdate);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Just place holding for state, select if NOT logged in\"), __jsx(\"option\", {\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Just place holding for state, select if logged in\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Here\", state.isLoggedIn), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return toggleType(state, e.target.value, forceUpdate);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: false,\n    type: \"org\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Organization\"), __jsx(\"option\", {\n    value: true,\n    type: \"vol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Volunteer\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/claremeyer/Documents/spring_senior/senior_design/handsIn/front/pages/login.js"],"names":["Layout","React","useContext","useState","useCallback","Header","GlobalContext","toggleLoggedIn","state","newState","type","forceUpdate","isLoggedIn","page","toggleType","isVolunteer","Login","bind","e","target","value"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAQC,aAAR,QAA4B,6BAA5B,C,CAEA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,WAAxB,EAAwC;AAC3DH,EAAAA,KAAK,CAACI,UAAN,GAAmBH,QAAnB;;AACA,MAAGA,QAAQ,IAAI,IAAf,EAAoB;AAChBD,IAAAA,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACE,IAAnB;AACH;;AACDC,EAAAA,WAAW;AACd,CAND;;AAQA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACN,KAAD,EAAQC,QAAR,EAAkBE,WAAlB,EAAkC;AACjDH,EAAAA,KAAK,CAACO,WAAN,GAAoBN,QAApB;AACAE,EAAAA,WAAW;AACd,CAHD;;AAMA,IAAMK,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMR,KAAK,GAAGN,UAAU,CAACI,aAAD,CAAxB,CADgB,CAEhB;;AAEA,MAAMK,WAAW,GAAGV,KAAK,CAACE,QAAN,GAAiB,CAAjB,EAAoBc,IAApB,CAAyB,IAAzB,EAA+B,EAA/B,CAApB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGI;AAAQ,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOX,cAAc,CAACC,KAAD,EAAQU,CAAC,CAACC,MAAF,CAASC,KAAjB,EAAwBV,IAAxB,EAA8BC,WAA9B,CAArB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFJ,EAGI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAHJ,CAHJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQH,KAAK,CAACI,UAAd,CATJ,EAUI;AAAQ,IAAA,QAAQ,EAAE,kBAACM,CAAD;AAAA,aAAOJ,UAAU,CAACN,KAAD,EAAQU,CAAC,CAACC,MAAF,CAASC,KAAjB,EAAwBT,WAAxB,CAAjB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAE,KAAf;AAAsB,IAAA,IAAI,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAqB,IAAA,IAAI,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAVJ,CADJ;AAiBH,CAvBD;;AAyBA,eAAeK,KAAf","sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState, type, forceUpdate) => {\n    state.isLoggedIn = newState;\n    if(newState == true){\n        state.page = state.type;\n    }\n    forceUpdate();\n}\n\nconst toggleType = (state, newState, forceUpdate) => {\n    state.isVolunteer = newState;\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(state, e.target.value, type, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn}</p>\n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value={false} type=\"org\">Organization</option>\n                <option value={true} type=\"vol\">Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}