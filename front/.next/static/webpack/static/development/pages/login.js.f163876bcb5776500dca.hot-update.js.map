{"version":3,"file":"static/webpack/static/development/pages/login.js.f163876bcb5776500dca.hot-update.js","sources":["webpack:///./components/GlobalContext.js","webpack:///./components/Header.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./pages/login.js"],"sourcesContent":["import React, {useState} from 'react';\n\nconst defaultState = {\n    isLoggedIn: \"false\",\n    isVolunteer: false\n};\n\n// const GlobalContext = React.createContext({...defaultState});\nconst GlobalStateContext = React.createContext();\nconst GlobalChangeStateContext = React.createContext();\n\nfunction changeStateFunc(state, action) {\n    \n}\n\nfunction GlobalProvider({children}) {\n    const [state, changeState] = React.useReducer(changeStateFunc, state);\n    return (\n        <GlobalStateContext.Provider value={state}>\n            <GlobalChangeStateContext.Provider value={changeState}>\n                {children}\n            </GlobalChangeStateContext.Provider>\n        </GlobalStateContext.Provider>\n    );\n}\n\nexport {GlobalStateContext, GlobalProvider};","import Link from 'next/link';\nimport {GlobalContext} from './GlobalContext';\n\n\nfunction Decide(props) {\n    if(props.isLoggedIn == false){\n        return <Navigation title=\"Dashboard\" page=\"/login\" />\n    }\n    else {\n        if (props.isVolunteer == true){\n            return <Navigation title=\"Dashboard\" page=\"/userDash\" />\n        } else {\n            return <Navigation title=\"Dashboard\" page=\"/orgDash\" />\n        }\n    }\n}\n\nconst linkStyle = {\n    marginRight: 15\n}\n\nconst Navigation = props => (\n    <Link href={props.page}>\n        <a style={linkStyle}>{props.title}</a>\n    </Link>\n)\n\nconst Header = (props) => {\n    return (\n        <div>\n            <Navigation title=\"Home\" page=\"/\" />\n            <Navigation title=\"About Us\" page=\"/aboutUs\" />\n            {/* <Decide title=\"Dashboard\" isVolunteer={data.isVolunteer} isLoggedIn={data.isLoggedIn} /> */}\n            <Navigation title=\"Opportunities\" page=\"/opps\" />\n            <Navigation title=\"Log In\" page=\"/login\" />\n        </div>\n    )\n}\n\nexport default Header;","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\n\nimport {GlobalStateContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, setaState) => {\n    if(state.isLoggedIn){\n        setState({ isLoggedIn: false });\n    } else {\n        setState({ isLoggedIn: true });\n    }\n}\n\nconst toggleType = (state, setState) => {\n    if (state.isVolunteer) {\n        dispatch({ isVolunteer: false });\n    } else {\n        dispatch({ isVolunteer: true });\n    }\n}\n\nconst Login = () => {\n    // const [state, setState] = useContext(GlobalContext);\n    const state = useContext(GlobalStateContext);\n    const { setState } = state;\n    // const {isLoggedIn, isVolunteer} = state;\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    return (\n        <Layout>\n            <p>Login</p>\n            <select onChange={() => toggleLoggedIn(state, setState)}>\n                <option>Just place holding for state, select if NOT logged in</option>\n                <option>Just place holding for state, select if logged in</option>\n            </select> \n\n            <p>Here{state.isLoggedIn}</p>\n            {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n        </Layout>\n    )\n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}