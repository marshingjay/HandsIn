{"version":3,"file":"static/webpack/static/development/pages/login.js.5cf9a5a4fddfd4556f54.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState, forceUpdate, dispatch) => {\n    state.isLoggedIn = newState;\n    forceUpdate();\n}\n\nconst toggleType = (state, newState, forceUpdate) => {\n    state.isVolunteer = newState;\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    const state = useContext(GlobalContext);\n    // const { dispatch } = state;\n    // const {state, setState} = useContext(GlobalContext);\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(state, e.target.value, forceUpdate, dispatch)}>\n                <option value={false} >Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn}</p>\n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value={false}>Organization</option>\n                <option value={true}>Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}