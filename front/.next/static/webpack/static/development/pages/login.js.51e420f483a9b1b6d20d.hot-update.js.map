{"version":3,"file":"static/webpack/static/development/pages/login.js.51e420f483a9b1b6d20d.hot-update.js","sources":["webpack:///./components/Header.js","webpack:///./pages/login.js"],"sourcesContent":["import Link from 'next/link';\n// import { GlobalContext } from './GlobalContext';\n\n\nfunction Decide(props) {\n    const state = React.useContext(GlobalContext);\n    if(state.isLoggedIn == false){\n        return (\n            <div>\n                <div>1state falseyyyy {state.isLoggedIn}</div>\n                <Navigation title=\"Dashboard\" page=\"/login\" />\n            </div>\n            \n        )\n    }\n    else {\n        if (state.isVolunteer == true){\n            return (\n                <div>\n                    <div>2state {state.isLoggedIn}</div>\n                    <Navigation title=\"Dashboard\" page=\"/userDash\" />\n                </div>\n                \n            )\n        } else {\n            return (\n                <div>\n                    <Navigation title=\"Dashboard\" page=\"/orgDash\" />\n                    <div>3state {state.isLoggedIn}</div>\n                </div>\n                \n            )\n        }\n    }\n}\n\nconst linkStyle = {\n    marginRight: 15\n}\n\nconst Navigation = props => (\n    <Link href={props.page}>\n        <a style={linkStyle}>{props.title}</a>\n    </Link>\n)\n\nclass Header extends React.Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <Navigation title=\"Home\" page=\"/\" />\n                <Navigation title=\"About Us\" page=\"/aboutUs\" />\n                <Decide title=\"Dashboard\" />\n                <Navigation title=\"Opportunities\" page=\"/opps\" />\n                <Navigation title=\"Log In\" page=\"/login\" />\n            </div>\n        )\n    }\n}\n\nexport default Header;","import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\n\n// import UseGlobalState from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, newState, forceUpdate) => {\n    state.isLoggedIn = newState;\n    forceUpdate();\n}\n\nconst toggleType = (state, newState, forceUpdate) => {\n    state.isVolunteer = newState;\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    // const state = useContext(GlobalContext);\n    const state = UseGlobalState();\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(state, e.target.value, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false} >Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{state.isLoggedIn}</p>\n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value={false}>Organization</option>\n                <option value={true}>Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAdA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}