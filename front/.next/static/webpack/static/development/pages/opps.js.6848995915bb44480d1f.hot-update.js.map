{"version":3,"file":"static/webpack/static/development/pages/opps.js.6848995915bb44480d1f.hot-update.js","sources":["webpack:///./components/GlobalContext.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js"],"sourcesContent":["import React, { useReducer } from 'react';\n\n// let reducer = (info, newInfo) => {\n//     return {...info, ...newInfo};\n// }\n\nconst defaultState = {\n    isLoggedIn: false,\n    type: \"\\orgDash\",\n    page: \"\\login\"\n};\n\nconst GlobalContext = React.createContext({...defaultState});\n\nconst GlobalProvider = (props) => {\n    // const [info, setInfo] = useReducer(reducer, defaultState);\n    const [info, setInfo] = useState({...defaultState});\n    return (\n        <GlobalContext.Provider value={{info, setInfo}}>\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport {GlobalContext, GlobalProvider};\n\n\n// const GlobalReducer = (state, action) => {\n//     switch (action.type) {\n//         case SET_STATES: \n//             return {\n//                 ...state,\n//                 isLoggedIn: { ...action.AisLoggedIn },\n//                 isVolunteer: {...action.AisVolunteer }\n//             }\n//         default:\n//             return state;\n//     }\n// };\n\n\n// const UseGlobalState = () => {\n//     const [state, setState] = useContext(GlobalContext);\n\n//     const setTheState = ({ aisLoggedIn, aisVolunteer }) => {\n//         setState({\n//             type: SET_STATE,\n//             isLoggedIn: aisLoggedIn,\n//             isVolunteer: aisVolunteer\n//         });\n//     };\n\n//     return {\n//         setTheState,\n//         isLoggedIn: { ...state.isLoggedIn },\n//         isVolunteer: {...state.isVolunteer },\n//     };\n// };\n\n// export default UseGlobalState;","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}