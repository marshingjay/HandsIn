{"version":3,"file":"static/webpack/static/development/pages/login.js.d977bad4758926068c72.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState } from 'react';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst toggleLoggedIn = (state, setaState) => {\n    if(state.isLoggedIn){\n        setState({ isLoggedIn: false });\n    } else {\n        setState({ isLoggedIn: true });\n    }\n}\n\nconst toggleType = (state, setState) => {\n    if (state.isVolunteer) {\n        dispatch({ isVolunteer: false });\n    } else {\n        dispatch({ isVolunteer: true });\n    }\n}\n\nconst Login = () => {\n    // const [state, setState] = useContext(GlobalContext);\n    const state = useContext(GlobalContext);\n    const { setState } = state;\n    // const {isLoggedIn, isVolunteer} = state;\n    // const [isLoggedIn, setIsLoggedIn] = useState('');\n    // const [state, setState] = useContext(GlobalContext);\n    return (\n        <Layout>\n            <p>Login</p>\n            <select onChange={() => toggleLoggedIn(state, setState)}>\n                <option>Just place holding for state, select if NOT logged in</option>\n                <option>Just place holding for state, select if logged in</option>\n            </select> \n\n            <p>Here{state.isLoggedIn}</p>\n            {/* <select onChange={(e) => handleType(e.target.value)}>\n                <option isVolunteer={false}>Organization</option>\n                <option isVolunteer={true}>Volunteer</option>\n            </select>  */}\n        </Layout>\n    )\n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}