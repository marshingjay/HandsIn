{"version":3,"file":"static/webpack/static/development/pages/login.js.58448b1b2bed18326adb.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nfunction updatePage(theState) {\n    console.log(theState.isLoggedIn);\n    if (theState.isLoggedIn = true) {\n        console.log(\"in here now\");\n        theState.page = theState.type;\n    }\n}\n\nfunction toggleLoggedIn(theState, newState, forceUpdate) {\n    theState.isLoggedIn = newState;\n    console.log(theState.isLoggedIn);\n    if(theState.isLoggedIn == true){\n        console.log(\"in here now\");\n        theState.page = theState.type;\n    } else {\n        theState.page = '\\login';\n    }\n    \n    // if(!newState) {\n    //     theState.page = \"\\login\";\n    // }\n    \n    forceUpdate();\n    console.log(theState.isLoggedIn);\n    // updatePage(theState);\n}\n\nfunction toggleType(theState, newState, forceUpdate) {\n    theState.type = newState;\n    toggleLoggedIn(theState, theState.isLoggedIn, forceUpdate);\n    updatePage(theState);\n    // forceUpdate();\n}\n\n\nconst Login = () => {\n    const theState = useContext(GlobalContext);\n    // const {info, setInfo} = useContext(GlobalContext);\n\n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    return (\n        <Layout>\n            <p>Login</p>\n\n            <select onChange={(e) => toggleLoggedIn(theState.isLoggedIn, e.target.value, forceUpdate)}>\n            {/* <select onChange={(e) => dispatch({type: 'change'})}> */}\n                <option value={false}>Just place holding for state, select if NOT logged in</option>\n                <option value={true}>Just place holding for state, select if logged in</option>\n            </select>\n\n            <p>Here{theState.isLoggedIn} {theState.page}</p>\n            \n            <select onChange={(e) => toggleType(state, e.target.value, forceUpdate)}>\n                <option value=\"/orgDash\" >Organization</option>\n                <option value=\"/userDash\">Volunteer</option>\n            </select> \n        </Layout>\n    )  \n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}