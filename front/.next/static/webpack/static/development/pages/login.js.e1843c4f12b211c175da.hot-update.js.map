{"version":3,"file":"static/webpack/static/development/pages/login.js.e1843c4f12b211c175da.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import Layout from '../components/TheLayout';\nimport React, { useContext, useState, useCallback } from 'react';\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\nimport Header from '../components/Header';\n\nimport {GlobalContext} from '../components/GlobalContext';\n\n// need this to change the isLoggedIn state of the header\n// also will change the state if isVolunteer depending on how they log in\nconst updateLinks = (state) => {\n    if (state.isLoggedIn == true) {\n        state.page = state.type;\n    } else {\n        state.page = \"\\login\";\n    }\n}\n\nfunction handleSubmit(state, acctType, forceUpdate) {\n    state.isLoggedIn = true;\n    state.type = acctType\n    updateLinks(state);\n\n    forceUpdate();\n}\n\n\nconst Login = () => {\n    \n    const forceUpdate = React.useState()[1].bind(null, {})\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [acctType, setAcctType] = useState(\"\");\n\n    const state = useContext(GlobalContext);\n\n    function validate(){\n        return email.length > 0 && password.length > 0;\n    }\n\n    return (\n        <Layout>\n            <form>\n                <FormGroup>\n                    {/* <ControlLabel>Email</ControlLabel> */}\n                    <FormControl \n                        autoFocus\n                        type=\"email\"\n                        placeholder = \"Email\"\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                    />\n                </FormGroup>\n                <p>Here{state.isLoggedIn} {state.page}</p>\n                <FormGroup>\n                    {/* <label>Password</label> */}\n                    <FormControl\n                        autoFocus\n                        type=\"password\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </FormGroup>\n                <FormGroup onChange={(e) => setAcctType(e.target.value)}>\n                    {/* <ControlLabel>Password</ControlLabel> */}\n                    <FormControl\n                        autoFocus\n                        type=\"radio\"\n                        name=\"acctType\"\n                        value=\"/userDash\"\n                        placeholder=\"Volunteer Account\"\n                    /><label>Volunteer Account</label>\n                    <FormControl\n                        autoFocus\n                        type=\"radio\"\n                        name=\"acctType\"\n                        value=\"/orgDash\"\n                        placeholder=\"Organization Account\"\n                    /><label>Organization Account</label>\n                </FormGroup>\n\n            </form>\n            <button onClick={() => handleSubmit(state, acctType, forceUpdate)} disabled={!validate()}>Login</button>\n            \n        </Layout>\n    )  \n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}